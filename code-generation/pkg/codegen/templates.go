// Code generated by go-bindata.
// sources:
// assets/aws-service-operator.yaml.templ
// assets/base.go.templ
// assets/cft.go.templ
// assets/operator.go.templ
// assets/template_functions.go.templ
// assets/types.go.templ
// DO NOT EDIT!

package codegen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _awsServiceOperatorYamlTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\x76\x03\x14\x28\x2a\x39\xee\xa9\x10\x76\x17\xd8\xda\x6e\x6a\x64\xeb\x5d\xd8\x4e\xaf\xc9\x98\x1a\xcb\xac\x29\x92\x20\x29\x3b\x8e\xe0\xff\x5e\x50\x5f\xfe\xf6\x2e\xda\x44\x27\x71\xf4\x38\xef\xcd\xe3\x70\x74\x0b\x0f\xd5\x03\xfd\x67\x18\x3d\x4f\x61\xd0\x1f\x4e\x61\xfa\xe7\x70\x02\x7f\x0c\x9f\x06\x70\xd7\x3e\xc1\x2d\x4c\x17\xdc\xc2\x9c\x0b\x02\x6e\x01\x73\xa7\x52\x92\x64\xd0\x51\x02\x2b\x8e\xf0\x05\xd7\x36\x54\xda\x47\x94\x81\xe6\xdb\x97\xe0\x16\x86\x73\xd8\xa8\xfc\xa7\x04\x04\x5f\x12\xb8\x05\x01\x5b\xa0\x4c\x09\x50\x6e\xdc\x82\xcb\x14\x70\xa6\x72\x07\xae\x25\xc8\x70\x49\x40\x09\x77\x16\x9c\x2a\x77\x44\x8e\x32\x2d\x82\xdb\x5a\x80\x2c\x83\x7a\x99\x76\x98\x4a\x28\x25\xd9\x41\x6b\xc9\x59\x48\xb8\x21\xe6\x94\xd9\x44\x41\x80\x9a\xff\x4d\xc6\x72\x25\x63\x58\x75\x83\x25\x97\x49\x0c\x4f\xdc\xba\x80\x3b\xca\x6c\x1c\x84\x50\xc5\x46\x98\x91\xd5\xc8\x28\x00\x38\xda\x04\x90\x91\xc3\x04\x1d\xc6\x01\x00\x80\xc4\x8c\x62\xf0\xa5\x5a\x32\x2b\xce\xa8\x2d\x39\x28\x0a\x53\x56\xf5\x8e\xcb\x84\xbe\xfe\x02\xef\x48\x50\x46\xd2\x41\x7c\x0f\xd1\xd0\x33\x6e\xb7\x41\x78\x40\x80\x9a\xd3\x57\x47\xd2\xaf\x6c\xb4\xfc\xcd\x46\x5c\x75\x56\xdd\x19\x39\xf4\xd4\x95\xba\x5e\x6e\x9d\xca\xc6\x64\x55\x6e\x18\xf5\x69\xce\x25\x77\x5c\xc9\x0b\xda\x8a\xa2\x21\x8e\x26\x9a\x58\xd4\x6c\x8c\x5e\x44\x6e\x50\x6c\xb7\xd1\xb1\xf2\x08\xd7\x36\x00\xb0\x9a\x58\x95\x28\x35\x2a\xd7\x31\x5c\xc0\x55\x44\xb6\x82\x36\x22\x8f\x59\x3f\x72\x99\x6c\xb7\x35\x44\x70\xeb\x3e\x5e\x81\x95\x67\x52\x41\x75\x29\xf2\x0d\x55\xd4\x78\xbb\x50\xc6\x8d\xf6\xf5\x14\x45\x08\x67\x0e\xc2\x9f\xc2\x85\x94\x13\x9f\xa3\xac\xa9\x4d\x1b\x36\x02\x22\x9f\xbb\x0d\xfb\xdc\xb4\x57\x98\xe5\x32\xcd\x05\x9a\xb7\xea\xb5\x4c\xe9\x6b\x47\x34\xf1\xdf\x6b\xec\x6a\xd7\x85\x28\xf4\x02\xbb\x41\x51\x54\xdc\x4d\xdb\xf6\x44\x6e\x1d\x99\xb1\x12\xc7\x8d\x6b\x66\xc8\x22\xcc\xdd\x42\x19\xfe\x0d\x7d\xb3\x9c\x36\xd7\x9b\xfb\x1a\xc0\xe4\xa2\xf2\xb7\xec\xde\x0f\xbe\x3b\x6a\xbb\x43\xb8\xb9\x29\x5f\x4c\x5d\x42\x1b\xb7\xc4\x0c\x39\x5b\xaf\xb4\x4a\x9a\x57\xa6\xe4\x9c\xa7\x19\x6a\xdb\x22\x4b\xc2\x66\x49\x2b\x92\xf5\xbe\x15\x99\x59\x9b\x30\x25\x57\xbf\x89\xa6\x5d\x42\x58\xa3\x63\x8b\x26\xb1\x21\x74\x54\x2f\x12\x12\xd4\x2e\x72\x9d\xec\xbe\xe8\x7a\xcb\x99\x5a\xce\x5d\xc7\xf3\xd5\xb1\xf2\x4e\x36\xe1\xa4\xbd\x93\xdf\x4f\xf7\x19\x79\x17\xef\xe3\x89\xbc\x9b\x9f\x6f\x4e\x85\xf8\x60\xdb\x3b\x93\x2a\xd7\x23\x63\x2a\x97\xee\x7f\xcd\xbd\x76\x22\xf8\x09\x7a\x01\x73\xae\x67\x7f\xe7\x32\xe1\x32\xfd\xc1\xad\xab\x04\x8d\x69\x5e\x21\x1b\x47\xaf\xb0\x04\xbb\x91\x76\x78\xbd\x5e\xe1\xb1\xf9\xec\x1f\x62\xae\xbe\x25\x17\x3c\xfe\x7e\x36\xf6\x49\x0b\xb5\xf1\x13\xe4\xc8\x3e\xd4\xda\xfe\x37\xa7\x5e\x67\xdf\xff\x45\x18\xd2\x82\x33\xb4\x31\x74\xcb\x75\xf9\x7b\x46\x47\xcd\x14\x3e\x24\x2e\xcd\x97\x52\xb9\xd2\x6a\xbb\x0b\x02\x70\xcc\x22\xcc\xf0\x9b\x92\xb8\xb6\x11\x53\x59\xc7\x1f\xd9\x15\x95\xe5\x0f\x05\x67\x24\x0e\xd2\xa0\xd6\x57\xf7\xec\x94\x97\xab\x83\x93\x19\x5d\xb7\xc5\x3f\x4c\x49\x87\x5c\x92\xd9\x23\x0d\x5f\xf3\xb3\x2e\x30\xc3\xb4\x42\xd5\xa0\x06\xd3\x39\xb7\x31\x5e\xbd\x8f\xde\x47\xdd\xb0\x1c\xf9\xbf\x1e\xa7\x79\xc9\x85\x78\x51\x82\xb3\x4d\x0c\x8f\x62\x8d\x1b\xbb\x6f\x81\x49\x0f\x2c\x69\x46\x06\x99\xa3\x60\x18\xb2\xaa\xb5\x43\x5f\xc0\xfd\x5d\xef\xe9\xd3\x64\x3a\x18\x7f\x1e\x3d\xfe\x35\x78\x38\xc1\x1a\x4a\xb9\x92\xf7\x77\xe3\xc1\x87\xe1\xf3\xe8\xf4\x3b\x56\x26\x86\x3c\xb9\xbf\x7b\xec\xf5\x9e\x3f\x8d\xa6\x9f\x87\xfd\x87\x7f\x03\x00\x00\xff\xff\x1b\x6a\x36\x65\x5b\x0a\x00\x00")

func awsServiceOperatorYamlTemplBytes() ([]byte, error) {
	return bindataRead(
		_awsServiceOperatorYamlTempl,
		"aws-service-operator.yaml.templ",
	)
}

func awsServiceOperatorYamlTempl() (*asset, error) {
	bytes, err := awsServiceOperatorYamlTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "aws-service-operator.yaml.templ", size: 2651, mode: os.FileMode(436), modTime: time.Unix(1540275354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xcd\x6e\xe2\x30\x10\x3e\xe3\xa7\x18\x21\xb4\x4a\x50\xe2\xdc\xd1\xee\x69\xf7\xb2\x87\x65\xd5\x72\xe8\xa1\xea\xc1\x31\x83\x89\x20\x76\x6a\x4f\x4a\xaa\xc8\xef\x5e\xd9\x21\x34\x3d\x54\xc0\x69\x32\xf1\xf8\x9b\xef\xc7\x8d\x90\x07\xa1\x10\x4a\xe1\x90\xb1\xaa\x6e\x8c\x25\x48\x18\xc0\x5c\x1a\x4d\xd8\xd1\x3c\x7c\xab\x8a\xf6\x6d\xc9\xa5\xa9\x0b\x71\x72\x47\x51\xba\x50\x73\x87\xf6\xad\x92\x98\x9b\x06\xad\x20\x63\x8b\xe6\xa0\x0a\x69\xf4\xae\x52\x77\x5f\x7b\x6d\xb1\xc5\x5a\x68\xa1\xd0\x86\xcb\x7d\x9f\x83\x15\x5a\x21\x2c\x2a\xbd\xc5\x2e\x83\x05\x1e\xb1\x46\x4d\xb0\xfa\x05\xfc\x2f\x61\xed\xbc\xbf\x77\xcb\xd8\xb8\xa2\xef\x47\x3c\xbe\x69\x50\xf2\x47\x74\xa6\xb5\x12\xf9\x5a\xd4\xe8\xfd\x48\x01\xf5\xd6\x7b\x96\x32\x46\xef\xcd\xe0\x12\x38\xb2\xad\x24\xe8\x19\xc0\xa0\x15\x96\x43\xe5\xbf\x63\x61\x00\x51\xcc\xbf\x41\x0c\x2c\xa7\xd2\xf8\xc3\xe4\x88\x79\xc6\x76\xad\x96\xb0\xc6\x53\xf2\x1d\x5c\x76\x3b\x5e\xc6\x52\x58\x46\x8e\x81\x9c\x45\x6a\xad\x86\x1f\xe1\x47\xe8\x47\xfc\xd5\xb9\x66\xf1\xdf\x14\x7a\xf5\xa5\x0b\xe7\xfe\x42\x31\x29\x07\xe8\x14\x9e\x04\xc9\x7d\x22\xa9\x83\xf3\x13\x09\x44\x43\xcd\x40\x8b\x1a\x5d\x23\x64\x34\xa9\xd2\x2a\x8d\x44\x6e\x8e\xb2\xda\x41\xc8\x31\x8a\x1f\xf3\x70\xcf\xf3\x6b\x51\xbd\xc0\x20\xef\xca\xdc\x98\x7d\x58\x7a\x65\x94\xaf\xf1\xf4\xff\x3c\x9e\x8c\x94\x52\x06\x30\x53\xe6\xd6\x35\x7c\x43\xc2\xd2\xc5\xac\x89\x39\x69\x34\x76\xf6\xf9\xbc\xd8\xec\x67\x2e\xa9\xe3\x7f\x8c\xc6\x24\x65\xfe\x23\x00\x00\xff\xff\x24\xcc\x82\x23\x95\x03\x00\x00")

func baseGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_baseGoTempl,
		"base.go.templ",
	)
}

func baseGoTempl() (*asset, error) {
	bytes, err := baseGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base.go.templ", size: 917, mode: os.FileMode(436), modTime: time.Unix(1540513065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cftGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x6d\x6f\x9b\xc8\x13\x7f\x0d\x9f\x62\xfe\x56\xd5\x3f\x44\x0e\xbe\xbe\xb5\x2e\x27\xf5\x9a\x3e\x44\xad\x92\x2a\x76\xdb\x17\x51\xd4\xae\x61\x8c\xb7\xc1\x2c\xc7\x2e\xf1\xf9\x2c\xbe\xfb\x69\x1f\x30\x0b\x36\x76\xdc\xf6\xda\xeb\xc9\xa8\x95\x61\x99\xf9\xcd\xe3\xce\xec\x84\xc1\x00\x7e\xd3\x17\x9c\x5f\xc1\xe5\xd5\x18\x9e\x9f\x5f\x8c\x61\xfc\xea\x62\x04\x2f\x2e\xde\x3c\x87\x5f\xd7\x97\x3b\x18\xc0\x78\x46\x39\x4c\x69\x82\x40\x39\x90\x42\xb0\x18\x53\xcc\x89\xc0\x08\xee\x29\x81\x4f\x64\xc1\x4f\x59\x26\x57\x58\x7e\x1a\xb2\x08\x63\x4c\x21\xcb\x59\x88\x9c\x7f\x92\x00\x17\x53\x58\xb2\xe2\xff\x11\x24\xf4\x0e\x41\xcc\x10\xc2\x19\x49\x63\x04\x92\x2e\xc5\x8c\xa6\x31\x90\x09\x2b\x04\x88\xb5\xa0\x39\xb9\x43\xc0\x88\x0a\x0e\x82\x29\x8e\x40\xe0\x3c\x4b\x24\x9a\xd6\x24\x55\xab\xd9\x5d\x3c\x30\x12\x07\x84\x73\x14\x1c\x22\x9a\x63\x28\x58\xbe\x0c\x5c\x37\x23\xe1\x1d\x89\x11\x56\xab\x60\x94\x61\x18\x5c\x23\x67\x45\x1e\x62\x70\x49\xe6\x58\x96\xae\x4b\xe7\x19\xcb\x05\x78\xae\xd3\xc3\x3c\x67\x39\xef\xb9\x4e\x2f\xa6\x62\x56\x4c\x82\x90\xcd\x07\x64\xc1\xe5\xff\x53\x1e\xdd\x9d\xc6\x4c\xde\xee\x26\xe0\x98\xdf\xd3\x10\x07\x61\xc2\x8a\x68\xca\xf2\x39\x11\x94\xa5\x3d\xd7\x21\x0b\xfe\xfe\x09\x49\xb2\x19\x79\x02\x2d\xfe\x84\x4c\x0c\x86\x66\x5e\xfb\x72\x20\xad\x23\x19\xe5\x83\xf6\x9b\x40\x8a\xbd\x37\x78\x9b\x1a\xed\x46\x0c\x59\x3a\xa5\xf1\xa1\x5c\x33\x4c\x32\x94\xfe\xf1\x5d\x19\x84\x4b\x5c\x40\x95\x06\x1c\x08\xa4\xb8\x00\x36\xf9\x8c\xa1\x70\xa7\x45\x1a\xca\xf7\x9e\x16\x04\x27\xfa\x37\x78\xa6\x7e\xfa\x5d\xc1\x80\x13\xcb\x47\x41\x45\xf4\x9a\xa6\x51\x59\xf6\x41\xb0\x8c\x86\x4f\xaf\x2f\x81\x8b\x9c\xa6\xb1\x0f\x27\xcf\x1a\x2e\x86\x95\xeb\xe4\x28\x8a\x3c\x85\xc7\xcd\x37\x2b\xd7\x71\x9a\x68\xc3\x2e\x15\xfa\xae\xe3\x68\x65\x87\x8e\xbc\xf4\x7d\xdf\x05\x80\xb5\x02\x43\xd0\x57\xf5\xdc\x77\x9d\xd2\x2d\x95\x4f\x5a\x1a\x45\x38\xa5\x29\x72\x95\xa7\x5d\x36\x87\x53\xc1\x5d\xb1\xcc\xb0\xcd\xcc\x45\x5e\x84\x42\x5a\x65\xbc\x58\x5d\x4d\x6f\xba\x2d\xd3\x76\x39\xd1\xad\x95\x36\x58\xda\x97\x46\xfb\x91\x20\xe1\x9d\x54\x0b\xb4\x1f\xb5\xe2\xa9\x5c\x60\x53\x75\xcf\x25\x05\x4c\x08\xc7\x08\x98\xde\x7f\xad\xad\xaf\x54\x52\xf1\xf7\x78\x3b\x42\x7e\x2d\xc1\xf3\x8d\x68\x2b\x6a\x26\xbf\x82\x9a\x88\x07\x95\xa9\x49\xc1\x05\xe6\x72\xb1\x0f\xbd\x0e\x57\xf6\xfa\xc0\x5b\x06\x07\x9a\x63\xeb\x32\xcf\x48\x88\xbe\x31\xfd\x25\x8a\xab\x42\x64\x85\xe0\xc6\x76\xcb\x5c\x66\x5e\x4c\x73\x36\x57\xcb\xe7\xc8\xc3\x9c\x4e\x50\x29\xca\x21\x24\x49\xd2\x6d\x72\x8d\xec\xf9\xe0\xcd\x49\x76\xa3\x0d\xbf\xd5\x3f\x7d\x50\x55\xc7\x97\x7e\xa8\x04\x0d\xcf\x60\x83\x6e\x55\xba\x0e\x47\xae\x5e\xae\xdd\xf2\xf4\xc3\x68\x84\x9c\x53\x96\xba\x0e\xbf\x0f\xe5\xbb\x66\xd9\x09\xe4\x26\x94\x6c\xbe\xeb\x3a\xca\x9a\x8b\xb4\x12\xd1\xa2\x6c\x1a\xa5\xc8\xe4\xbe\x59\x07\x43\x66\x3d\x59\xc8\xe8\x48\x75\x3c\x3b\x4c\xbe\xaf\xb6\x40\x65\x80\x32\x49\xe9\x79\x1f\xb6\x60\xbd\xc7\x96\x12\xbe\xeb\xd0\xa9\xa2\xfd\xdf\x19\xa4\x34\x91\x2e\xa8\x72\x21\xa5\x89\x82\x91\xb8\x8e\x2c\x36\x4c\x00\x2f\x72\x04\x3a\xd5\x3d\x82\x72\xc0\x7b\xd9\x64\x18\xe7\x74\x92\xa0\xc2\x4a\x30\xf5\xb4\x0e\x5a\x3b\xee\x4b\xe8\x27\xdb\x80\x59\xce\x95\x73\x7a\x29\xd3\x61\xae\x02\x8f\x11\x2c\xa8\x98\x81\x98\x11\x61\x12\x40\xee\x80\x9e\xaf\x4d\x9c\xb2\x1c\x3e\xf6\x65\x4e\x48\x0b\x73\xd5\xc3\x1a\x22\x6f\x7e\xb9\x0d\xaa\x54\x92\x72\x4d\x50\x6f\x4e\x58\x21\xcc\x8b\xd7\xb8\xbc\x85\x33\xb0\x56\xde\x93\xa4\x40\x2d\xc0\xe8\x69\xd8\xb4\x13\x4c\x71\xc9\x91\x08\xed\x48\x58\xd0\x24\x81\x50\x2d\x58\x99\x6a\x14\x47\xe0\x45\x96\x25\x14\x23\xc8\x48\x4e\xe6\xbc\x3b\x3b\x2d\x4c\x99\x9e\x5a\x2a\x9c\xb4\x72\xc3\xa2\xba\xb2\x42\x5c\x67\xee\x57\x66\x66\x38\x55\xad\x5d\x1a\x33\x3c\x5b\xd7\x81\x97\x28\x94\xba\x2f\x2a\x9e\xb1\x21\x5a\xd7\x85\xc3\x6a\x41\xf5\x38\x5e\x66\x58\x96\xc1\x76\xec\x8e\x82\xf1\x60\x5e\x53\x55\xf6\xed\x36\xcb\xa3\x87\x6f\x35\xa7\x12\xf8\xee\xfa\xcd\xd0\xa6\xac\xfd\xa8\xc8\x2e\x99\xa0\x53\x1a\x2a\x89\x4f\xaf\x2f\xf9\x10\x6e\x6e\x4f\x4c\x39\x71\x1d\xc7\x69\xc8\xa8\x1a\x83\xe2\x2c\xfb\x55\x32\x6a\xaf\xaa\xa6\x60\x85\x46\xab\xff\x56\x26\x97\xd7\xbb\xb6\x88\xba\x6a\xb0\x5f\x63\xbd\xc7\x5c\xe6\xc5\x5e\x38\x43\xb7\x0d\xb1\x45\xe2\xbb\x4e\x5a\xb9\xbe\x13\x76\x1d\x9c\x2e\x15\x4d\xe4\x9c\xb0\xee\x35\x9d\x60\x56\x3f\x52\x70\x9b\x6d\xca\x77\x57\xab\x53\x53\x1f\x1e\x09\x96\x49\x28\x2d\xf2\x77\x16\x2d\x83\x51\x38\xc3\x39\x09\xde\xe6\xb2\x75\x0a\x8a\xbc\x2c\x65\x23\x3f\x95\xf5\x6d\xcb\xaa\xc1\x49\x91\xcb\x23\xb7\x84\x6a\xd0\xd4\xac\x26\x33\xe8\x5f\x18\x69\x5e\x29\x3b\x78\x8d\xcb\xb2\x5c\xad\x0c\xbf\x7e\x94\x94\x12\xa9\x57\xaf\x57\x69\x55\x96\x3d\x8d\x88\x09\xc7\x87\xc3\xc8\x7f\x65\x19\x5c\x4d\x3e\x07\xab\xd5\xa3\xc6\x7e\x31\x00\x23\x75\xa4\x51\x7c\x2a\x02\xf5\xa3\x62\xed\xd5\x82\xd3\x7d\xea\xab\x8a\xb9\xee\x34\x55\x90\x6a\xf3\xbd\x3d\x3a\xf7\xd7\x3c\xe7\x44\x90\xd5\xd5\xe4\xf3\x50\xa5\xc5\xa3\xe6\xa1\x53\x9f\xb1\x86\x50\x57\x9c\x57\x9a\x6d\xb8\xe6\x97\x85\xcc\x2f\x77\x35\x33\xab\x2d\xca\x6d\x05\xb0\x43\xb7\xce\x94\xdb\x0c\x93\xa2\xef\xf5\xad\x73\x93\xdc\xca\x74\xba\xdc\x65\xbb\xf2\x9b\xef\xb7\xdc\x6c\x87\x5a\x25\x92\x87\x7f\xa8\xb4\x55\x01\x84\x9e\x5d\x07\x7a\x7e\x3b\x34\xbb\x74\x56\x18\x7b\x15\xde\xf0\xbc\x2e\x1a\x7e\x43\xb7\x07\x65\xb9\xc9\x47\xa7\x2d\x7b\x67\x4e\x5b\x4c\x07\x25\xf1\xfe\xac\x3d\x28\x4d\x7f\x70\x5e\x7e\xe3\x98\x6e\xb8\x61\x5b\xd6\xa9\xdb\xfa\xce\x75\xd4\x81\x05\x05\xe6\xaa\x6b\xde\xdc\xb6\x8f\x22\x6f\xab\xf7\xf2\x40\x6c\x11\x9f\x01\xc9\x32\x4c\x23\xaf\x5e\xeb\x83\x9d\xb6\xfe\xc3\xc9\xeb\xb6\xb2\x8f\x23\xb5\xfa\xc6\x3e\xda\xf0\x07\x35\x87\xbd\x8a\xed\xa8\x16\xdd\x75\xe2\x10\x50\xbf\x2b\xd8\xd6\x19\x29\x18\xa1\x58\xc7\x96\x5b\x50\x7e\xeb\x18\x32\x26\xf1\x66\x6e\x8e\x49\xfc\xa5\xe7\x90\xfd\x78\x5f\x76\x10\xe9\xc6\xfd\x92\x93\x48\x37\xda\x43\x8e\x22\xae\x23\x48\xdc\xb1\xa1\xc6\x44\xcd\x96\x8a\x60\x1d\x49\xf9\xd4\xdc\x3e\x63\x12\xfb\xbb\xa9\x6a\x7f\x76\x10\xda\xae\xe9\x20\x69\x5a\xec\x6f\xa6\xc8\x98\xc4\x5c\xd1\xfa\xae\x0b\x76\x01\x03\x3d\x6e\xda\xf3\x4c\x6b\xd6\xd4\x45\xcf\xcc\x52\xef\xb2\xa8\x39\x4b\x15\x6a\x41\x0d\x4f\xf8\x27\xe5\x82\xa6\xb1\x1e\xaa\xba\x67\x27\x0b\xc3\xd3\xec\xd1\xae\x3f\xbe\x74\x8f\x57\x16\xd0\xcf\x33\x5e\x19\x8b\x0f\x99\xaa\x0e\x66\x79\xe0\x30\x65\xf9\xef\x38\x4c\x1d\x87\xa9\xe3\x30\xf5\x6f\x18\xa6\xcc\x66\xff\x0e\x47\xd5\xe3\x04\xf5\x4f\x4c\x50\xf0\x5f\x9a\xa0\xbe\x5f\x32\x1e\xe7\xa6\xe3\xdc\x74\x9c\x9b\x8e\x73\xd3\x4f\x36\x37\xd9\xb3\xcc\xae\xb9\xe9\x1c\x13\x6c\xcc\x4d\x91\x5a\xa8\xbf\x41\x75\x8f\x4b\x16\xab\xe7\x83\xf7\x4d\x27\x9c\x7d\x9f\x36\xd7\x92\xf5\x7c\x50\x6e\xf8\xc7\xfe\xe6\x6c\x0f\x08\xd2\x5b\x1f\x6d\x47\xd9\x56\xec\x72\xd4\x07\x42\xc5\xbb\x54\xd0\x44\x91\x6a\xae\xe8\x50\x97\x6d\x05\xf9\xee\xce\xfb\xea\xef\xc2\x60\xf9\x6f\x9b\x49\xcf\xd8\x3c\x93\xbf\x9d\x0e\xfd\x3b\x00\x00\xff\xff\xdd\xfa\xa4\x1b\xae\x24\x00\x00")

func cftGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_cftGoTempl,
		"cft.go.templ",
	)
}

func cftGoTempl() (*asset, error) {
	bytes, err := cftGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cft.go.templ", size: 9390, mode: os.FileMode(436), modTime: time.Unix(1538638943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _operatorGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x73\xdb\x36\x12\x7f\x26\x3f\x05\xca\x6b\x53\x32\x55\xc8\xe6\xed\xc6\x73\xbe\x8e\x6b\xbb\xad\xa7\x8e\xed\xb3\x9d\xe6\x21\x93\x71\x61\x72\x25\x31\x26\x01\x16\x80\xec\xb8\xaa\xbe\xfb\xcd\x62\x01\x8a\xb4\x29\x59\x6a\x32\xbd\x9b\xbb\xf8\x45\x24\x80\x5d\xec\x9f\xdf\xfe\x01\xe8\x2c\x63\xff\xa4\x3f\x76\x70\xca\x4e\x4e\x2f\xd9\xe1\xc1\xd1\x25\xbb\xfc\xe9\xe8\x82\xfd\x70\x74\x7c\xc8\xfe\xd1\xfe\x85\x59\xc6\x2e\xa7\xa5\x66\xe3\xb2\x02\x56\x6a\xc6\x67\x46\x4e\x40\x80\xe2\x06\x0a\x76\x5b\x72\xf6\x2b\xbf\xd3\x2f\x64\x83\x23\x52\x31\x3f\xf7\x2b\x52\x1e\x8d\xd9\xbd\x9c\x7d\x5d\xb0\xaa\xbc\x01\x66\xa6\xc0\xf2\x29\x17\x13\x60\x5c\xdc\x9b\x69\x29\x26\x8c\x5f\xcb\x99\x61\xa6\xdd\xa1\xe6\x37\xc0\xa0\x28\x8d\x66\x46\x5a\x8a\xd4\x40\xdd\x54\xc8\x8d\x44\x10\x76\xb4\xb9\x99\x64\xb9\x2c\x60\x02\x22\xe3\x5a\x83\xd1\xac\x28\x15\xe4\x46\xaa\xfb\x34\x0c\x1b\x9e\xdf\xf0\x09\xb0\xf9\x3c\xbd\x68\x20\x4f\xcf\x41\xcb\x99\xca\x21\x3d\xe1\x35\x2c\x16\x61\x58\xd6\x8d\x54\x86\xc5\x61\x10\xe5\x52\x18\xf8\x60\xa2\x30\x98\xcf\x5f\xb0\x72\xcc\x88\xe4\x48\xef\xcf\xb4\x91\x75\xf9\x3b\x14\x8b\x45\x18\xb0\x1a\x0c\xbf\x7d\xc9\xa2\x9b\xbf\xeb\xb4\x94\x19\x6f\xca\x9a\xe7\xd3\x52\x80\xba\xcf\x50\x1c\xde\x94\x3a\xc3\x45\xd9\xed\xcb\x28\x0c\xa2\x49\x69\xa6\xb3\xeb\x34\x97\x75\xc6\xef\x74\xc5\xaf\x35\xfe\xbe\xd0\xa0\x6e\xcb\x1c\x5a\x8b\x59\xda\x29\x54\x0d\x28\x8d\x64\x0a\xc6\x15\xe4\x5e\x1c\x10\xb8\xf9\x96\xdc\x72\x29\xc6\xe5\x24\x0a\x19\xdb\x8a\xec\xb7\x19\xcc\xa0\xe6\x82\x4f\x40\x21\x71\xcf\x1c\xff\xc2\xc9\xc5\x22\x64\x2c\x97\x0a\xfa\x76\xc8\x70\xc8\x6a\xdd\xdf\xb1\xe4\x22\x97\x15\xb2\xcc\xb4\x51\x39\xd7\x60\x57\x68\xa3\x4a\x31\x41\x65\xf9\x9d\xce\xab\x12\x84\xd9\x4e\x50\xa2\x71\x3f\x1a\x4c\x76\x0b\x4a\x97\x52\x40\x91\x99\xfb\x06\x8a\xec\x21\x55\xca\xef\x74\x76\xfb\x92\x57\xcd\x94\x6f\xed\x1b\x6b\x96\x9e\x3b\xb6\xa3\xf7\x2f\xb8\xaf\xb3\x19\x49\xfe\x62\x22\x33\x23\x65\xa5\xb3\x9c\xe7\x53\x88\x42\x6b\x90\x5f\x9c\x98\xdb\x99\xc4\x82\xef\x29\xb5\x7b\x0e\xf5\xe8\xe6\xa6\x94\x42\xa7\x67\x14\x31\xd6\xc3\x91\x0f\x9b\x55\x6b\x7a\xd6\x48\x42\x0c\xce\x53\x9f\x00\x14\x34\x0a\x34\x3a\x86\x71\x86\xb1\xa5\x64\x55\x81\x62\xf2\xfa\x3d\xe4\x86\x8d\x65\xfb\xa8\x8d\x54\xc0\x72\xbb\x07\x53\x2e\x42\x75\x88\x2e\x5c\xb2\xd3\x46\xcd\x72\xc3\xe6\x61\x40\xa8\x66\xf4\xf7\x9c\xde\xd2\x7d\xfb\x13\x06\x46\x36\x65\xbe\x77\x7e\x62\x27\x09\x60\xe1\xc2\x0a\x76\x02\x77\x2d\xb3\x5c\x01\x37\xd0\x95\x0a\xc5\xb9\xe3\x26\xb7\xc9\x68\xad\x5c\x8e\xb8\x08\xc7\x33\x91\x77\xb9\xc6\x4e\xb0\xbe\x48\x09\x7b\xde\x6e\x3b\x0f\x03\x05\x66\xa6\x04\x7b\xe6\xc7\xe6\x61\xe0\x14\xda\x71\x1a\xd1\xdb\x28\x0c\x16\x4e\xf0\x0b\xc3\x95\x79\x83\xb2\x91\x84\xa0\xad\xb4\xa5\xd0\x86\x0b\x14\x48\x8e\xd9\x29\x49\x7c\x31\x2c\x31\x17\x05\xe3\xb9\xd1\x4c\xda\xa4\x59\x93\xe8\x71\xbe\x14\x2d\xe9\xec\x12\xe7\xe6\x03\x73\xc9\x10\x95\xc0\xdf\x11\x13\xbc\x06\xdd\xf0\x1c\x9c\x55\x13\xd2\x86\xb6\xf8\x89\x8b\xa2\x02\xa5\xd9\xce\x2e\xb3\x18\x6e\x13\xed\xe1\x2d\x08\xe3\xa6\x7f\x98\x89\x5c\xa3\xc2\x7b\x45\x81\xcf\x56\xe3\x3c\x95\x62\xaf\x28\x46\x61\x10\xbc\x6e\x0a\x6e\x80\x66\x70\x98\xde\x71\xe6\x00\x2a\xe8\xce\xd0\xbb\xb5\x51\x30\x98\x9d\x02\x1b\xac\xb9\x51\x15\x8a\x64\x5f\xd2\x13\xb8\x8b\xf3\xd4\x99\x97\xf9\xa7\x74\xef\xcd\xc5\xbe\x4f\x20\x23\xf6\xf2\xdb\x24\x0c\xf2\xd4\xc3\x68\xc4\xae\x98\xa3\x47\x66\xe9\x39\x4c\x4a\x6d\x40\xc5\xd1\x8a\x8a\x12\x59\x72\x72\x3d\x49\xf3\x0a\x0b\x9d\x4a\xf7\x8a\x22\xee\xf2\xed\x26\xd9\xb4\x63\xa0\xd8\x12\x91\xea\x2a\x49\xfa\xd9\x1f\x03\x1a\x15\x6a\x03\x1b\x75\x7a\x2c\xca\x59\x35\x53\xbc\x5a\x2c\xa2\x8e\xdb\x46\xec\xa1\xb3\x56\xd8\x20\x3d\x3f\xbc\xb8\xa4\xb7\x18\xf7\xc7\xbd\x52\x02\xc6\xb3\x4e\x5a\x4a\xfd\xae\x3f\x97\x28\xdc\x7c\x31\x62\xb9\xf9\x90\x1e\x48\x01\x48\xb6\x08\xc3\x41\xc7\x64\x19\xeb\x2a\xc8\xee\xca\xaa\x62\x86\xbb\xae\xa0\x06\xad\xf9\x04\x01\xae\x64\x6d\x47\xac\x99\x2c\x80\x1b\x25\x73\xd0\xba\x03\xe0\x2e\xa3\xe1\xe0\x1b\xb1\x5a\x4f\xd8\xf3\x9e\xad\x5f\xd1\x1e\xdf\xcb\xe2\x3e\x61\xa0\x14\xc5\x65\x25\x27\x13\xb2\xad\x63\x70\x6c\x07\xc2\xe0\x96\x2b\x6b\xc4\xc7\x11\x10\x06\xe5\x18\xf9\xa7\x56\x04\x7e\x5d\x01\x32\x0a\x70\x19\xdb\xb5\x13\xde\x21\x08\x0d\x37\x43\x0c\x68\xfa\xc4\xbf\x87\xc1\x82\x41\xa5\x89\x9e\x6a\xc2\x05\x82\xf1\x0a\xe5\x69\x6b\x23\x3a\xfb\x07\xa9\x48\x33\xa7\x2f\x39\x8b\x12\x4d\x18\xb4\xf1\xa8\x47\xa8\x99\xd5\xc6\x73\x6b\xfd\x45\xe0\x20\xb4\xc6\x51\x94\xa4\xc7\xa5\x36\x31\x35\x35\xf6\xf9\xb4\xb1\x59\x7e\xbe\x40\x8e\xe5\xd8\x72\xfa\x62\x97\x89\xb2\xb2\xf2\x39\x53\xa5\x6f\x4a\x33\x3d\x44\xf3\xc5\xa0\x54\x92\xd2\x63\x44\x06\x9d\x80\x31\x98\x48\x57\x23\x13\x79\xfb\x64\x08\x4a\x85\x01\x86\x72\x80\x79\xed\x6a\x89\x54\x54\x40\xd9\x3e\xb1\x55\x2c\x3d\x32\x50\x6b\x12\xa4\x1c\xb7\xe3\xe9\x85\xe1\x66\xa6\xf1\x27\xbf\x39\x3a\x60\xbb\x64\xe1\x33\xae\x34\x14\xce\xe3\x6f\x23\x9a\x2d\xa2\x77\x44\xef\x5d\xa5\xba\x21\xdc\x4e\x78\x4f\xf5\x66\x9d\xbb\x48\xda\x05\xe6\x1f\x8b\x02\xcb\xe8\x8b\x5d\x16\x45\xec\xd9\xb3\x0e\x50\x68\x08\x37\xe3\x42\x48\x43\xe5\x13\xb5\xaa\x79\xf3\x96\x50\xf4\x8e\x7e\xac\x40\x4e\xc0\x83\x68\x67\xad\xf4\xa3\xe5\x5a\x94\x69\xcd\x6a\x3b\xed\xd6\x7b\x1f\x5c\xde\x37\x2b\x48\x7a\x2b\x2c\xd5\x82\x10\xb0\x66\x2d\xd9\x3d\x7a\x87\x16\x8f\xce\x4f\x8f\x8f\xbf\xdf\xdb\xff\xf9\x6a\xff\xf4\xd5\xd9\xf1\xe1\xe5\x21\xe9\x1e\xc8\xeb\xf7\x2d\x20\x0b\x9b\xba\xad\x74\xb1\xcf\xc5\x0f\xe2\x6b\xb4\x56\xfb\xc4\xb9\xfe\x21\x2c\xfb\x68\xb2\xa2\x07\x3e\x48\x20\x97\xaa\xc0\x24\x4c\x5e\x80\xc2\x96\xa5\x71\x6c\x05\xeb\xb8\x66\xe4\x9a\xda\xd4\xce\xa3\x1d\xde\x70\x25\x4a\x31\x19\x31\xd7\xb8\xa6\x97\x72\x9f\xd7\x50\xc5\xae\x79\x4d\x2f\xe5\xb1\xbc\x03\x15\x6f\x60\xa3\x24\x19\xd4\xac\xbf\xec\x1c\xb8\x96\x82\xd4\x74\x59\x61\x0b\x0f\x1c\x1c\xa2\xd9\xd7\xd9\x7f\x66\xf3\x25\x11\xfd\x39\x07\x6c\xa0\xc4\x46\x8b\xba\x9a\xfe\x9f\x38\x34\x40\x1d\x77\x59\x29\x72\x05\x35\x08\x73\x2e\xab\xea\x9a\xe7\x37\xfb\x72\x26\xcc\x2a\x6f\x6c\x61\x9f\x4e\x19\xf9\xec\xf4\x8e\xd3\x4f\xa4\xaa\x79\xf5\x1f\x0a\xe2\x90\xca\x84\x53\x4c\x94\x55\xb8\x08\x3b\x4d\xdd\x40\x2f\x6e\x3b\x62\x54\x8b\x95\xc2\x80\x1a\xf3\x1c\xe6\x0b\xdb\x70\xdb\xe2\x21\xaf\xdf\xa7\xf1\xf3\xd5\xbd\x58\x92\x1e\x00\x34\xfb\xb2\xb9\x8f\x93\xb0\x6d\x90\x85\x34\xc3\x27\xbe\xbd\xa2\xb0\xa7\xbd\x72\xcc\xb4\xaf\xa3\x7d\x75\x6c\x6a\x89\xd8\x1f\x7f\xac\x5d\x30\x90\x7b\x6c\x83\x3f\x36\x28\x74\xbf\xfb\xb6\xcd\xa7\x6f\x86\x13\xbb\x4e\xce\x4c\x33\x33\xcb\xc6\x65\x6c\xd2\x7d\x7b\xd2\xa2\x5a\x41\x8b\x1e\x22\xc6\x1d\x99\xd2\x5e\xd3\x36\xd8\x9a\x8c\x7d\x6f\x62\x8f\x6f\x83\xcd\x09\xf5\x44\xec\xeb\xaf\xf4\xd7\xd1\x88\x69\xfb\x9e\xb8\x2d\xc8\x7b\xf6\x65\x11\x0e\xed\x79\x24\xc6\x72\x1c\x47\xbc\x28\xa0\x58\xcb\x9a\xdd\x95\x66\xca\xb4\x6b\x54\x7a\x9b\x8d\x5c\x67\x19\x3f\x27\x63\xb8\x76\xa6\x48\x92\x75\x5b\xde\x96\x70\xc7\xb8\x61\x53\x63\x1a\xbd\x93\x65\xb9\x14\x5a\x56\x80\x87\xfe\x94\xd7\xfc\x77\x29\xec\xd5\x41\x5e\xc9\x59\x31\xc6\x40\x40\xb7\x67\x53\x59\xc3\x77\x7f\xcb\xac\x1c\x59\x01\x86\x97\xd5\x77\x24\x54\xb1\xfb\x95\x8e\xd6\x88\x12\x06\xc1\x15\xb9\xe9\x61\x62\x59\xba\xd7\xab\xb3\x6c\x9a\x56\x32\x1c\xb1\x68\xff\xfc\x70\xef\xf2\xf0\xea\xe8\xe4\xea\xec\xfc\xf4\xc7\xf3\xc3\x8b\x8b\x68\xc4\xa2\x68\x45\xff\xb9\x89\xb7\xbd\xb3\xad\x7c\xe8\x6c\x4d\xe1\x4b\x01\x89\x3e\xa4\x73\x55\xa5\xed\x69\x71\xc5\x3d\x87\x8d\x8c\xae\x5a\xbd\xe3\xd8\xaa\xd8\xa5\x13\x49\x2c\xab\xe2\x14\x13\x93\x80\xbb\xd3\x81\x48\x96\xd2\x86\xb2\x5d\xb4\x79\x34\x07\xc2\x92\x11\xcf\x6d\x92\x80\x4d\x00\xdb\x05\x2f\x5a\x9a\x32\x91\x90\x89\xb5\xd9\xd3\xb9\x84\x74\xf7\xe9\xc4\xdd\x66\xa6\x47\xda\x3a\x7b\x5f\xd6\x0d\x36\x7f\xb1\x5c\x21\xc9\x88\x8d\x79\xa5\x21\xc1\x26\xfa\x0b\x77\xff\x69\xd5\x38\xfc\x6d\xc6\x2b\x24\xf3\x3a\x62\x52\x5f\x2c\x46\xa8\x53\x7f\x28\x59\x97\x75\xa4\xdc\x28\xed\xbc\xf6\xa0\xce\x6f\x9c\xea\x9f\x24\xf1\xb4\x58\x7c\x3a\x3b\x08\xb8\x63\x0d\x57\xbc\xd6\xec\xab\x6f\x6e\xed\xf1\x57\x56\x05\x3e\x47\x56\x67\x8a\x2e\x21\x51\xa5\x6d\x33\x14\x85\xec\x26\x39\xca\x49\xe0\x52\x54\xbb\xed\xff\x48\x8e\x92\x5e\x1f\xf7\xf0\x64\x96\x7a\x7d\x76\xf0\x97\x67\x29\xba\x7c\x7f\x22\x4d\xf9\xa0\x7b\x80\x74\x84\xee\x06\xe9\x8a\xee\xd2\xfe\xb2\x6e\x83\xb6\x43\x6d\x36\x69\x0c\x82\x4e\x58\x1e\x74\x4e\x8e\x49\x38\x60\xf3\xad\xa2\xd1\x9e\x43\xb7\x68\x03\x7c\x67\x4a\xcd\xdc\x0a\x98\xd3\xe1\x76\x7d\x6c\x75\x79\x6e\xe0\x5c\x6f\xaf\x75\x65\x28\x5c\xf7\xc1\xca\x3a\x7d\xed\x89\xe3\xd1\xa5\x99\xbd\xce\xa0\x40\x18\xba\xf8\x7d\xfa\xd2\xec\x23\xee\xb0\xfc\x75\xcb\xa6\x37\x58\xcb\x63\x52\xfa\x23\x98\x98\x0e\x35\xee\x36\xeb\x47\xe8\x5d\x66\x3d\x46\xcc\x27\xbb\xca\xea\x9e\x5a\xa8\xd9\xa7\x55\x18\x16\xf6\x16\xcb\x53\x75\x6b\x79\x77\x91\x63\xde\xf5\x4e\xe7\xee\x69\xc5\x8a\x6f\x5e\x86\xe1\x32\xcf\x6d\x6e\x28\xd7\xa1\x74\xb9\xff\x59\xf3\xb4\xa9\xcb\x33\x1b\x30\x47\xff\xe8\x43\x80\x1c\x38\x91\x6e\x07\xc3\x51\xdb\x42\x77\xde\xb1\x9b\xf1\xaf\xca\x9e\xc1\x5a\xd0\xae\x4b\x61\x23\x82\x74\xf2\x19\xd3\x03\x98\x16\x65\x35\xfa\x28\x60\x0f\xf7\x9c\xce\x5d\x9b\x2c\xa6\xd3\xb4\x0d\x07\x7c\x18\x26\x69\x6f\x7e\x3d\x2e\xa8\xe9\x5d\xd5\x82\xea\x7e\xc3\x69\xcb\x47\xa7\x1e\x39\x04\x76\x37\xf2\xb5\x9e\x1a\x03\xdd\xeb\x18\xd1\x29\x34\x1c\x7f\xfc\xa5\xb9\xdb\x20\xf2\x97\x07\x36\xd7\xd3\x35\xf8\x97\x8d\x92\x0d\x6e\x4a\x7e\x3b\x75\x3d\x4a\x3e\x85\x9a\xa7\x67\x4a\x36\xa0\x4c\x09\x9a\x61\x3d\xf1\x95\xd8\xd2\xa4\x97\x50\x37\x15\x37\xfe\x9f\x18\x82\xf9\x9c\xc6\x7f\x86\x7b\xc4\xbf\x45\xb4\xb7\xd5\x72\x6d\x1c\xf9\x75\x6e\x0c\xec\x47\x25\xbf\xf0\x80\x1b\x3e\x3f\xbd\x7e\xbf\xf3\xc0\x50\xfb\xee\x83\x26\x99\x71\xd1\xfd\x32\x61\x5d\xe6\xe4\xf6\xbc\x2f\xec\xa7\x5d\x2b\x09\xdb\x65\x3d\xc9\x9c\x1a\xbe\x46\x6e\xc1\xc6\x59\xf1\xed\x23\x0d\xec\x82\xe8\x9d\xe7\x2c\x8a\xe5\x2e\xf4\xbc\xf8\xef\x4e\xaa\xfd\x78\xdc\x0e\xe2\xa4\x93\xbe\x17\xf9\x5e\x51\x94\x98\x45\x78\xe5\x63\x4d\x0f\xa2\x7e\x2b\x38\x63\x17\xe4\x75\xc0\x4d\xba\x2a\x78\x3c\x77\xea\x41\x1f\x34\xdd\xea\xf0\xf8\x23\xc1\xc7\x15\x87\xcf\xe9\xff\x13\xa5\xff\x35\x39\xd2\xe5\x47\x17\x36\x9b\xf4\xeb\x83\x3b\x2c\xe9\xdf\xf0\xd2\xbc\x16\xa6\xac\x2c\x0b\xe2\x56\x50\x79\xe9\xc1\x87\x88\x3d\x74\xd6\x83\xfb\x11\x8c\x34\x5b\x77\xb4\x61\x68\xbd\x0e\x3a\xfe\x42\x10\x74\xae\xce\x08\x06\xfe\x4e\x6d\x53\x20\x3c\xea\xc1\xdc\x37\xd5\xe1\x9a\x8d\x27\x8a\xe5\x11\x62\xc0\x80\xe9\x05\xfd\x53\x11\x16\x17\xed\x1f\x77\x76\xd9\x5b\xff\x01\x73\x31\x9f\xbb\x04\xda\xa9\x57\xdd\x2f\xb9\x1b\xb1\x6e\x0f\x90\xf0\xdb\x92\xda\xde\xed\xb0\xe8\xf0\x83\x01\x25\xc8\x42\x11\x2d\xfd\x52\x3d\x38\x61\x75\xca\x18\xdd\x1e\x77\x89\xdc\x3e\x71\xe7\xb0\x39\x78\x53\x19\x75\x19\x77\x19\xd8\xea\x37\x9f\xc7\xa5\x28\xe0\x43\x47\xbe\x33\xa9\x8c\x66\xdf\x26\xf6\x61\x81\xfe\x68\x4d\xb4\xcb\x78\xd3\x80\x28\x62\x3f\x82\x0c\x1e\x8a\xdd\x3b\xd0\xf5\x1f\x37\xf5\x49\xcb\x71\xed\xba\x5d\xe6\xc5\xf0\xde\x7a\xda\xf1\x04\xe1\x57\xbc\xc1\x6d\xc8\x74\x35\xbe\x7c\x22\xe7\xf7\xd8\x0f\xf9\x14\xbb\x8c\x95\xdf\xcc\x3b\xdb\x95\x06\x6a\x5c\xb7\xa4\xb7\x94\xb6\xbc\xa3\x47\x71\x9e\xba\x8a\x68\x87\xb5\x03\xbf\xf0\x6a\x66\xfd\xfa\xb0\x09\xd8\x08\x5d\xad\xf0\x4f\x62\x6a\x58\xaf\xc4\xff\x3b\x9b\xb5\x68\x8b\x95\xe5\xd8\x26\x68\xd9\xdc\x7b\x6b\x41\xd2\x59\xe9\xab\x1f\x4a\xd0\x02\x65\xf3\xae\xa8\x97\xbb\x1e\xf4\x45\x1b\xe4\x2a\x7f\x97\xf9\xe8\x5b\xd9\xbf\x03\x00\x00\xff\xff\xaf\x08\x3a\x87\xb0\x2c\x00\x00")

func operatorGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_operatorGoTempl,
		"operator.go.templ",
	)
}

func operatorGoTempl() (*asset, error) {
	bytes, err := operatorGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "operator.go.templ", size: 11440, mode: os.FileMode(436), modTime: time.Unix(1540513196, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _template_functionsGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x8e\xdb\x36\x10\x3d\x8b\x5f\x31\x15\x02\xd4\x2a\xbc\x22\xf6\x56\x04\x4d\x0f\x6d\x36\x89\x91\x60\xb7\xc8\x1a\xc8\xb1\xa1\xa5\xb1\x34\x30\x45\x12\xe4\xc8\x8e\x21\xe8\xdf\x0b\x92\xb2\x03\x6c\x91\xee\x56\x17\x4a\x23\xce\x7b\xf3\x1e\x67\x28\x25\xfc\x9e\x1f\x78\xfb\x00\xf7\x0f\x5b\xb8\x7b\xbb\xd9\xc2\xf6\xc3\xe6\x11\xde\x6d\x3e\xdd\xc1\x6f\xd7\x47\x48\x09\xdb\x9e\x02\xec\x49\x23\x50\x00\x35\xb2\xed\xd0\xa0\x57\x8c\x2d\x1c\x49\xc1\x57\x75\x0a\x37\xd6\xc5\x88\xf5\x37\x8d\x6d\xb1\x43\x03\xce\xdb\x06\x43\xf8\x1a\x01\x36\x7b\x38\xdb\xf1\xe7\x16\x34\x1d\x10\xb8\x47\x68\x7a\x65\x3a\x04\x65\xce\xdc\x93\xe9\x40\xed\xec\xc8\xc0\x57\xa2\x41\x1d\x10\xb0\x25\x0e\xc0\x36\x65\xd4\x8c\x83\xd3\x11\x2d\x57\x62\x52\xd4\x1d\x3a\xb9\x30\x4a\x15\x02\x72\x80\x96\x3c\x36\x6c\xfd\xb9\x16\xc2\xa9\xe6\xa0\x3a\x84\x1e\xb5\x43\x1f\x84\xa0\xc1\x59\xcf\xb0\x12\x85\x3a\x85\x46\x13\x1a\x86\xb2\x23\xee\xc7\x5d\xdd\xd8\x41\xaa\x53\xd0\x6a\x17\xe2\x7a\x13\xd0\x1f\xa9\xc1\xab\x34\x99\xc8\x52\xce\xb2\x04\x64\x79\x44\x1f\xc8\x1a\x6c\x25\x9f\x1d\xb6\xf2\x69\x56\xad\x4e\x41\x1e\x6f\x95\x76\xbd\xba\x2d\x45\xf1\xff\xd8\xac\xd9\x53\x57\x8a\x62\x40\x56\xc7\x5b\x28\x0f\xbf\x86\x9a\xac\x54\x8e\x06\xd5\xf4\x64\xd0\x9f\xd3\x46\xe5\x28\xc8\xb8\x49\x1e\x6f\x4b\x51\x89\xe8\xd3\x3d\x9e\xe0\x0b\x69\x0d\x1e\x79\xf4\xe6\x62\x42\x34\x74\x87\xe0\xa2\x5d\x2d\x90\x59\xfc\x4d\xf6\x2a\xc6\x20\xf6\xa3\x69\x62\xf2\xaa\x82\x0f\x4b\xca\x24\x8a\x05\x64\x89\x4c\xa2\x00\xf8\x38\xee\xd0\x1b\x64\x0c\x9f\x31\xd8\xd1\x37\x78\xaf\x06\x7c\xfd\x83\xf8\x5a\x14\xc5\x34\xdd\x80\x4f\x27\xff\x8a\x4c\x8b\xdf\xd6\xf0\x0a\x35\x0e\xf1\x14\x5e\xbf\x81\x7a\xc3\x38\x04\x98\x67\x51\x14\xef\x91\xa7\xe9\xf2\xb3\x7e\x74\xd8\xd4\x1f\xc9\xb4\xf3\xfc\xc7\x39\x93\x3c\xb3\xe1\xc2\x86\x31\x24\x8a\x59\xcc\xc9\x93\x8b\xa0\x16\xf7\x64\x30\x80\xd2\x3a\xa9\xcf\x71\x88\xd2\x99\xac\x09\xc0\xbd\x62\x50\x1e\x01\xbf\x39\x1b\x8d\xfa\x97\x4d\xf1\xb8\xaf\x78\x81\xfd\xd8\x30\x4c\xe2\x47\xae\x24\xe8\x55\x60\x4f\xa6\xab\xe0\xf2\x22\x5e\xee\xc8\x33\x7a\x33\xfe\x2f\xb9\x61\xea\x3f\xd3\xb2\x86\x4c\x73\x59\x2b\x58\x91\x61\xf4\x7b\xd5\xe0\x34\xaf\x01\xbd\xb7\x7e\xa9\x21\xfb\x34\x0b\xf1\xd2\x82\xa4\x7c\xee\x08\xe0\x14\x9b\x6f\x4f\xa6\x4d\xce\xf9\xc5\x0d\xd8\x9d\xc1\xa8\x01\x73\x9f\x3d\x83\xb1\xca\x82\xe0\xa9\xb0\x08\x70\x55\x17\x3f\x82\x53\x0d\xfe\xa7\xce\xd8\xc4\xda\x76\x1d\xfa\x28\x64\xc1\xfb\x94\x02\xa2\xc8\xf3\xfc\x88\xbc\x86\xbf\xe3\xef\xeb\xed\x50\xdf\xe3\xe9\x9d\xf5\x99\x77\xa9\xa6\xfe\x7c\xf7\xb8\xcd\x91\x2a\x0e\x46\xd6\x95\x78\x12\xf4\x05\xab\x7e\xaa\xec\x2f\x3d\x7a\xa5\xa3\xae\x79\x5e\x5d\xab\xae\xea\xf7\xc8\xe9\x73\x0d\x79\xce\x63\xe0\xc1\xa5\x46\x9c\xe6\x4a\x14\xb4\x4f\xd8\x3f\xbd\x01\x43\x3a\xea\x58\x84\xd4\x5f\x88\xfb\xbb\xa8\x6e\x85\xde\x57\x75\x7e\x2d\x93\x5e\xe8\x90\x39\x5e\xad\x21\x76\xb3\x75\xd4\x94\x95\x28\x2e\x63\x5c\x96\xa9\xdc\x38\x18\xd7\xd1\xfe\x2e\xc4\x90\x16\xb3\xf8\xde\x16\xff\x04\x00\x00\xff\xff\xe5\x13\x3f\x32\x30\x06\x00\x00")

func template_functionsGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_template_functionsGoTempl,
		"template_functions.go.templ",
	)
}

func template_functionsGoTempl() (*asset, error) {
	bytes, err := template_functionsGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template_functions.go.templ", size: 1584, mode: os.FileMode(436), modTime: time.Unix(1538540481, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _typesGoTempl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\x3d\x4b\xbf\x62\x60\x04\x85\xd5\x26\x36\x7c\x5b\x18\xd8\xc3\x6e\x16\x2d\xb6\x69\x36\x45\x9c\xf6\xb2\x58\x20\x0c\x35\x92\xb9\x96\x48\x96\xa4\xd2\x1a\x86\xfe\x7b\xc1\x0f\xc9\xa6\x25\x6d\xd3\x43\x0e\xab\x93\x34\xf3\xe6\x91\x7c\xf3\x21\x4a\x42\x77\xa4\x44\x78\x5e\x91\x4a\x6e\xc9\x2a\x4d\x59\x2d\x85\x32\x30\x4f\x93\x1a\x0d\x79\x5e\xc1\x6c\xf7\x46\x2f\x98\x58\x12\xc9\x6a\x42\xb7\x8c\xa3\xda\x2f\xe5\xae\xb4\x06\xbd\xb4\xa0\xe5\xf3\x6a\x96\x26\x93\x38\xd5\x70\xc3\x6a\x9c\xa5\x59\x9a\x2e\x97\xf0\x53\x89\x9c\x56\x0c\xb9\x89\xbf\xd6\x5c\x6c\x0c\x31\x8d\x76\xe6\xdd\x1b\xbd\xce\x11\x25\x15\x72\x7f\x55\x22\x5f\x33\x6e\x50\x15\x84\xa2\x7e\xfb\x1f\x0b\x2d\xee\x9e\xbe\x22\x35\x6e\xb1\xc3\x61\xb1\x91\x48\x17\x37\x8c\xe7\x6d\x0b\x39\x16\x8c\xa3\x06\xb3\x45\x78\x22\x1a\x41\xa1\x16\x8d\xa2\x98\x9a\xbd\xc4\x73\xb4\x36\xaa\xa1\x06\x0e\x9d\x14\x8b\x87\xbd\xc4\x5b\x34\x04\x00\x1e\xbf\x6a\xc1\xd7\xb3\x4b\xc6\x2b\xc6\x71\xf6\xd8\x63\xfc\xe2\x0e\x15\x30\xd6\x91\x13\x43\x2c\xa8\x5b\xc1\x32\xb5\x2d\x00\x9c\xad\x39\xf0\x07\x8e\x53\xfb\xaf\x9b\xbb\x4f\x6d\x6b\xd9\xbc\x5e\x70\xf2\xc4\x6c\x03\x7f\x60\xd3\xce\x6e\x19\xee\x1a\x23\x1b\x33\xcd\x30\xf0\x07\x06\xe1\xec\x96\xe1\x5d\x9e\x33\xc3\x04\x27\xd5\x7d\xd0\x52\x9f\x71\x8c\x21\x02\x0d\x19\xba\x66\x8f\x69\x9b\xa6\x87\xc3\x15\xb0\x02\xe6\x25\xc2\xbc\x42\x0e\x9e\xef\xbd\xc8\xf7\x8b\x0d\xdd\x62\x4d\x16\x37\xb8\xbf\x25\x52\x32\x5e\x66\xb0\xca\xda\xd6\x85\x28\xc2\x4b\x84\x0b\xc6\x73\xfc\xe7\x12\x2e\xb0\xc2\x1a\xb9\x81\xf5\xdb\x6f\x12\xb4\xad\x2f\x95\x8b\x38\x13\x9e\xe6\xac\x6a\x4e\xcc\x5d\xed\x40\x21\xd4\x79\x74\x57\x4f\x53\x94\xc7\xd2\xea\x4e\x2a\x14\xcc\xf1\xaf\xb0\x77\x98\xd9\xb0\x59\x16\x99\x3e\xd8\x1a\xca\xec\x51\x93\xeb\x4a\x34\xf9\xcf\x42\xd5\xc4\xaa\xf7\x80\xb5\xac\x88\xc1\x4f\xa4\x46\xcb\xcc\x78\xd9\x09\x4c\x27\x81\x36\x77\xd3\x34\x5a\x12\xfa\x72\x2e\x87\xb6\x84\xf7\xa2\xaa\x9e\x08\xdd\x5d\x8b\x86\x1b\x60\xdc\x74\xb1\xea\xd4\xe1\x1b\xe1\x0a\xd0\x29\x65\x4b\xae\xcf\x9c\x54\x42\xda\x74\x75\xa9\xb3\x87\xed\x14\xe2\xc1\xef\x9a\x00\x66\x9d\xfc\xee\x30\x59\x20\xf2\x80\x8d\x53\xf7\x06\xf7\x6d\xdb\xdb\x6c\xd0\x5d\xe1\xbb\x13\xa2\xb4\x1c\x7b\xcc\x23\x5d\xdc\xd8\x1e\xfd\xbb\xad\x34\xff\xe6\x6c\x95\xc6\xc9\x74\x47\xbd\x7c\x4c\xf9\x77\x9f\xbd\x70\x74\x27\xc2\x70\xca\x86\x99\x71\xda\x35\x7e\x5c\x9c\x77\xcc\x58\xc3\x8c\x10\xf5\xc2\x8d\x56\x8a\x0f\xf0\xd0\xae\xb5\x7f\x57\x42\xa2\x32\x0c\x35\xbc\x42\x5d\xc4\xc5\x30\x3c\x7f\x98\xba\x5b\x51\xe5\xfe\xf4\x7e\xdc\x82\x28\xdc\x97\x4b\x5b\xd1\x25\x02\x4c\xc8\xc4\x98\x00\x81\xe9\x44\x80\x6e\x4c\x46\x93\x3d\x4e\xb4\x8a\x20\x6e\xbf\x71\xd4\x3d\x12\x2d\xf8\x37\xa3\x3c\xa4\x3f\x2b\x2b\x82\xcc\x7f\x68\x8c\xab\xce\xc9\xbb\x31\x84\xee\x3e\x7e\x80\xe8\x89\xe9\xb5\x87\xbc\x40\xbd\xb1\xbf\xc5\x51\xca\xe3\x0f\xa3\x2f\x26\x3d\xa6\xdc\x18\xcb\x60\xe6\xfa\x80\x11\xe8\x62\x83\xea\x99\x51\xd4\x76\xfc\x74\xef\x49\xf2\xf9\x8b\x3f\x54\xd2\x1d\x2a\x78\xe2\x59\xf1\x12\x76\xaa\xd0\x04\x72\xf7\x9a\x8c\x91\x3b\xcf\xff\xe5\xbe\x16\xbc\x60\xe5\x2d\x91\x8e\xfe\xf8\x35\xe0\xa7\xbd\x2b\x5e\xc2\xe7\xe4\x75\xee\x5f\xbf\x31\x1d\xcf\x85\xca\x1a\x88\x31\x8a\x3d\x35\xc6\x8f\x05\xff\x93\x8d\xfa\xd0\xe6\x77\x2c\xc9\x8e\x6e\xfa\x92\x36\x79\x45\xb3\x71\x53\x17\xb4\x8f\x06\xeb\xd3\x1b\xd3\xe7\x2f\x67\x9b\x09\x31\xcc\xe2\xfc\x5d\xa5\x68\x38\x05\xc6\x99\x99\x67\x76\x1b\x95\xa0\xa4\x72\x83\x08\xdf\x37\xac\xca\x51\x2d\xee\xb1\x64\xda\xa0\x9a\x93\x3c\x8f\xe9\xec\x66\x75\xd6\xb3\x8c\xfb\xe7\xda\xb1\xc1\x8f\x9d\xc0\x9e\x3d\x03\x54\xca\x0e\xd2\x34\xf1\x00\x5b\x10\x37\x5c\xfc\xcd\x7d\x94\x47\xfd\xa2\x44\x23\xff\x44\xa5\x99\xe0\x97\x69\x92\xfc\x70\x76\xe1\x6c\x47\x8c\x56\x20\xe7\xc8\x7a\xcd\xde\xe5\xf9\x83\x38\xe5\x0a\x9b\xba\x84\xe1\x32\x59\x9a\x28\x34\x8d\xe2\xc0\x59\x95\xb6\xe9\xbf\x01\x00\x00\xff\xff\x10\x11\xf5\x38\x65\x0c\x00\x00")

func typesGoTemplBytes() ([]byte, error) {
	return bindataRead(
		_typesGoTempl,
		"types.go.templ",
	)
}

func typesGoTempl() (*asset, error) {
	bytes, err := typesGoTemplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "types.go.templ", size: 3173, mode: os.FileMode(436), modTime: time.Unix(1538540481, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"aws-service-operator.yaml.templ": awsServiceOperatorYamlTempl,
	"base.go.templ": baseGoTempl,
	"cft.go.templ": cftGoTempl,
	"operator.go.templ": operatorGoTempl,
	"template_functions.go.templ": template_functionsGoTempl,
	"types.go.templ": typesGoTempl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"aws-service-operator.yaml.templ": &bintree{awsServiceOperatorYamlTempl, map[string]*bintree{}},
	"base.go.templ": &bintree{baseGoTempl, map[string]*bintree{}},
	"cft.go.templ": &bintree{cftGoTempl, map[string]*bintree{}},
	"operator.go.templ": &bintree{operatorGoTempl, map[string]*bintree{}},
	"template_functions.go.templ": &bintree{template_functionsGoTempl, map[string]*bintree{}},
	"types.go.templ": &bintree{typesGoTempl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

