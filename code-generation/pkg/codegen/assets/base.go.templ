package base

import (
  "context"
  "github.com/awslabs/aws-service-operator/pkg/config"
  "github.com/awslabs/aws-service-operator/pkg/queuemanager"
  {{- range $index, $element := .Items}}
  "github.com/awslabs/aws-service-operator/pkg/operators/{{$element.Spec.Resource.Name}}"
  {{- end}}
)

type base struct {
  config *config.Config
  queueManager *queuemanager.QueueManager
}

func New(
  config *config.Config,
  queueManager *queuemanager.QueueManager,
) *base {
  return &base{
    config: config,
    queueManager: queueManager,
  }
}

func (b *base) Watch(ctx context.Context, namespace string) {
  {{- range $index, $element := .Items}}
  if b.config.Resources["{{$element.Spec.Resource.Name}}"] {
    {{$element.Spec.Resource.Name}}operator := {{$element.Spec.Resource.Name}}.NewOperator(b.config)
  	go {{$element.Spec.Resource.Name}}operator.StartWatch(ctx, namespace)
  }
	{{- end}}

	<-ctx.Done()
}